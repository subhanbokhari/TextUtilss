{"ast":null,"code":"var _jsxFileName = \"/home/subhan/Desktop/HTML-CSS/ReactJs/textutils/src/App.js\",\n  _s = $RefreshSig$();\n//import './App.css';\nimport { useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/textform';\n// import About from './Components/About'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('dark');\n  const togglemode = () => {\n    if (mose == 'light') {\n      setMode = 'dark';\n    } else {\n      setMode = 'light';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Text Analyser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"x90f4MVxRZ8OpBMrg5Wn+Kd9eQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","togglemode","mose","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/home/subhan/Desktop/HTML-CSS/ReactJs/textutils/src/App.js"],"sourcesContent":["//import './App.css';\nimport { useState } from 'react';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/textform';\n// import About from './Components/About'\nfunction App() {\n  const [mode, setMode] = useState('dark');\n\n  const togglemode = () =>\n  {\n    if (mose == 'light')\n    {\n      setMode = 'dark';\n    }\n    else\n    {\n      setMode = 'light';\n    }\n  }\n  return (\n  <>\n      {/*Navigation Bar*/}\n        {/* <Navbar title=\"TextUtils\" aboutText = \"About\"/> */}\n      {/* Text Box */}\n      <Navbar title='TextUtils' mode={mode} togglemode={togglemode}/>\n      <div className='container my-5'>\n        <TextForm heading=\"Text Analyser\"/>\n        {/* <About /> */}\n      </div>\n  </>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAExC,MAAMW,UAAU,GAAGA,CAAA,KACnB;IACE,IAAIC,IAAI,IAAI,OAAO,EACnB;MACEF,OAAO,GAAG,MAAM;IAClB,CAAC,MAED;MACEA,OAAO,GAAG,OAAO;IACnB;EACF,CAAC;EACD,oBACAN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBAIIT,OAAA,CAACH,MAAM;MAACa,KAAK,EAAC,WAAW;MAACL,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/Dd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7BT,OAAA,CAACF,QAAQ;QAACkB,OAAO,EAAC;MAAe;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC;EAAA,eACR,CAAC;AAEL;AAACV,EAAA,CA1BQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}